generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  avatar       String?
  badges       String[]
  achievements String[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  password     String
  attempts     Attempt[]
  stats        Stats?

  @@map("users")
}

model Stats {
  id               Int        @id @default(autoincrement())
  quizzesAttempted Int        @default(0)
  bestScore        Int        @default(0)
  coursesCompleted Int        @default(0)
  streak           Int        @default(0)
  lastActiveDate   DateTime   @default(now())
  rank             Int        @default(0)
  previous_rank    Int        @default(0)
  userId           Int        @unique
  points           Point[]
  progress         Progress[]
  user             User       @relation(fields: [userId], references: [id])

  @@map("stats")
}

model Progress {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now())
  count   Int      @default(0)
  statsId Int
  stats   Stats    @relation(fields: [statsId], references: [id])

  @@unique([statsId, date])
  @@map("progress")
}

model Point {
  id        Int      @id @default(autoincrement())
  points    Int
  reason    String
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  statsId   Int
  stats     Stats    @relation(fields: [statsId], references: [id])

  @@map("points")
}

model Quiz {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime   @default(now())
  attempts    Attempt[]
  questions   Question[]

  @@map("quizzes")
}

model Question {
  id      Int      @id @default(autoincrement())
  quizId  Int
  text    String
  options String[]
  answer  String
  points  Int      @default(1)
  quiz    Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@map("questions")
}

model Attempt {
  id        Int      @id @default(autoincrement())
  userId    Int
  quizId    Int
  score     Int      @default(0)
  createdAt DateTime @default(now())
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("attempts")
}
